##########
# Windows
##########

1. Clone project Leonardo from github to a local folder.

	https://desktop.github.com/
	Install the Git client and create and account on github.
	Get your account added to the project.

	https://github.com/nox282/Leonardo
	Click "Clone in Desktop" in bottom right to get a local copy in the client.
	You can also clone from the client if your account is member of the project.
	Or use this URL: https://github.com/noxcorporation/Leonardo.git

	Or you can also use the "Download ZIP" button
	This will not keep files up to date or let you participate to the project directly.

	Keep the project files in a location of your choice.

2. Install dependencies (GCC 4.9.2, SDL2, SDL_image, SDL_ttf)

	http://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%20Installer/Previous/1.1309.0/tdm64-gcc-4.9.2-3.exe/download
	Get and install TDM64 with GCC 4.9.2:
	Uncheck "Check for updated files on the TDM-GCC server".
	Leave the rest to default, you can choose your install directory.

	https://www.libsdl.org/release/SDL2-devel-2.0.3-mingw.tar.gz
	Get and unzip SDL2.
	Go to the SDL2-2.0.3\include directory and move all files to a new SDL2 folder.
	It should look like "SDL2-2.0.3\include\SDL2" and all .h files would be there.

	https://www.libsdl.org/projects/SDL_image/release/SDL2_image-devel-2.0.0-mingw.tar.gz
	https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-devel-2.0.12-mingw.tar.gz

3. Create a project in your favorite IDE and add all code files.

	## BEGINNER/OPTIONAL:
	## http://downloads.codelite.org/downloads.php?windows_64
	## Install CodeLite.

	## Create a new Workspace for C++ named Leonardo.
	## Select the project source folder (with github files) and uncheck "Create a new folder".
	## Create a new project inside same folder with template "Others" -> "Non-code".
	## Name Leonardo and uncheck "Create a new folder".
	## Leave compiler and debugger to default for now. Validate.

	## Right click the project and "Import files from directory". Check all folders. Validate.

4. Setup IDE to use GCC 4.9.2 for C++11 and link properly to SDL headers and lib files.

	## BEGINNER/OPTIONAL:
	## In CodeLite go to "Settings" -> "Build settings" -> "Add compilers" -> "Add an existing compiler"
	## Select the TDM-GCC-64 main directory. Name it "TDM-GCC-64 (GCC 4.9.2)".
	## Go to project right click "Settings".
	## In "General" change compiler to you newly created one.

	## In "Compiler", field "Include Paths" add the complete path to SDL2-2.0.3\include.
	## Starting from your system root (example C: or D:).
	## Try to avoid a path containing spaces. You can move the SDL2-2.0.3 folder where necessary.
	## Don't include the SDL2 folder in the path.

	## In "Linker", field "Libraries Search Path" add the complete path to SDL2-2.0.3\lib\x64. Similar to before.
	## In field "Libraries" put "SDL2main;SDL2".

5. Compile the code. Verify that it compiles properly.

	## BEGINNER/OPTIONAL:
	## For CodeLite it is in "Build" -> "Build Project". Shortcut F7.

6. Add the runtimes to run the built executable.

	https://www.libsdl.org/release/SDL2-2.0.3-win32-x64.zip
	Unzip and drop the SDL runtime DLL next to the executable.
	Or a directory included in the PATH variable (not recommended).
	Alternatively you can also copy the SDL2.DLL file from the SDL2-2.0.3\lib\x64 folder (not tested).

	https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.0-win32-x64.zip
	https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.12-win32-x64.zip
	Same thing, put runtimes next to the program executable.

	## BEGINNER/OPTIONAL:
	## For CodeLite put it in the Debug sub-folder of the project directory. Next to Leonardo.exe.
	## To run the executable you can use the Ctrl-F9 shortcut (re-compiles and runs). Or menu "Build" -> "Run".

7. You're all set to start contributing.
	Note: Your github account needs to be authorized to push new code to the master server.

##########
# MacOSX
##########

##########
# Linux
##########

1. Clone project Leonardo from github to a local folder.
	
	First off you'll need to create and account on github and get yourself added to the project.
	
	##Please note that all the commands are intended for Debian based distribution with apt-get package manager.
	##If you happen to use another distribution or package manager, please change the commands arcodingly.
	
	Now you'll need to install git, use the following :
	`apt-get install git` 
	
	##You'll probably need the Super User rights to do that. If so then add `sudo` in front of your commands that requires SU.
	##If you don't have sudo packages installed on your system, then you'll need to log into the SU account using :
	`su` (although it is not recommended if you're a beginner and/or you don't know what you're doing).
	
	Once you have git installed, follow the tutorial on how to set it up properly on :
	https://github.com/ (step number 1 on the GitHub bootcamp).
	
	You're ready to clone the repository into your system, use :
	`git clone https://github.com/noxcorporation/Leonardo.git /Your/favorite/destination/folder/`

	Please note that you can also use the "Download ZIP" button.
	This will not keep files up to date or let you participate to the project directly.
	
2. Install dependencies (GCC 4.9.2, SDL2, SDL_image, SDL_ttf)

	Now that you have the sources, you'll need a way to compile them:
	`apt-get install g++-4.9.2`
	
	You will also need the SDL2 framework to make the graphics component to work:
	`apt-get install libsdl2`
	
	You're almost ready to compile already. The project uses some extra libraries that are facultative part of SDL2.
	First off create a directory in the directory of your choice:
	(Note that it would be better to do that outside of the repository)
	`mkdir SDL2_image_build && cd SDL2_image_build
	 wget https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.0.tar.gz
	 tar xvf SDL2_image-2.0.0.tar.gz`
	
	Now you have the SDL2_image sources, we need to compile them and then install:
	`cd SDL2_image-2.0.0
	 ./autogen.sh
	 ./configure
	 make
	 sudo make install`
	
	You should have the needed includes into /usr/include/SDL2, if not, check /usr/local/include/SDL2.
	You'll want to move the .h from the local/include to /usr/include if nescessary.
	
	We also need SDL2_ttf sources, the same trick will do:
	 `mkdir SDL2_ttf_build && cd SDL2_ttf_build
	 wget https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.12.tar.gz
	 tar xvf SDL2_ttf-2.0.12.tar.gz
	 cd SDL2_image-2.0.0
	 ./autogen.sh
	 ./configure
	 make
	 sudo make install`
	 
	There you have it, you can clean the *_build directories as you don't need them anymore.
	
	You can already try and compile files with:
	`g++ -Wall source.cpp -o executable -lSDL2`
	
3. Create a project in your favorite IDE and add all code files.

	## BEGINNER/OPTIONAL:
	## From there you have two choices, ever you use your favorite text editor and manage your makefile yourself.
	## Then I'll assume that you know what you're doing.
	## Or you can install an IDE that will do all the build work for you, in this turorial we'll cover Codelite.
	## You can get it here :
	## http://downloads.codelite.org/ (You can support codelite here : http://codelite.org/support.php)
